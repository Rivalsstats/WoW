name: Move Existing Data to Season Layout

on:
  workflow_dispatch:
    inputs:
      season:
        description: 'Season number to assign (e.g., 14)'
        required: true
        default: '14'

jobs:
  move-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: true

      - name: Move data directories in each branch
        env:
          SEASON: ${{ github.event.inputs.season }}
        run: |
          set -euo pipefail

          echo "Migrating data to season ${SEASON} across branches"

          git for-each-ref --format='%(refname:short)' refs/remotes/origin \
            | grep '^origin/[^/]\+$' \
            | grep -v '^origin/HEAD$' \
            | sed 's@^origin/@@' \
            | grep -v '^main$' \
            | while read -r branch; do

              echo "→ Checking out ${branch}"
              git checkout --track origin/${branch}

              # Move only the desired directories
              for old in data/*/*/*; do
                [ -d "$old" ] || continue
                [[ "$old" == data/runs* ]] && continue

                region=$(basename "$(dirname "$(dirname "$old")")")
                realm=$(basename "$(dirname "$old")")
                period=$(basename "$old")
                target="data/${region}/${realm}/${SEASON}/${period}"
                mkdir -p "$(dirname "$target")"
                git mv "$old" "$target" >/dev/null 2>&1 || true
              done

              if ! git diff --quiet; then
                git config user.name "github-actions[bot]"
                git config user.email "github-actions[bot]@users.noreply.github.com"
                git commit -am "chore: migrate data to season ${SEASON} layout"
                echo "pushing changes for ${branch}"
                git push --set-upstream origin "${branch}"
              else
                echo "✔ No changes in ${branch}"
              fi

            done

          git checkout main
          echo "✅ Data migration complete for season ${SEASON}"

name: Cleanup WoW Data Structure

on:
  workflow_dispatch:
    inputs:
      season:
        description: 'Season number to keep (e.g., 14)'
        required: true
        default: '14'

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout all branches
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: true

      - name: Prune and retain only correct files
        env:
          SEASON: ${{ github.event.inputs.season }}
        run: |
          set -euo pipefail
          echo "Cleaning up data structure for season $SEASON"

          git for-each-ref --format='%(refname:short)' refs/remotes/origin/* \
          | grep '^origin/[^/]\+$' \
          | grep -vE '^(origin/HEAD|origin/main)$' \
          | sed 's@^origin/@@' \
          | while read -r branch; do

              echo "→ Branch: $branch"
              git checkout -q --track origin/"$branch"

              # find all file and dir paths under data/
              find data -mindepth 1 | while read -r path; do
                rel=${path#data/}
                IFS='/' read -r region realm season period rest <<< "$rel"

                # 1) if this isn't under the correct season directory, delete it
                if [[ "$season" != "$SEASON" ]]; then
                  echo "($season ≠ $SEASON) Removing $path"
                  git rm -rf --ignore-unmatch "$path"
                  continue
                fi

                # 2) if it's exactly runs.csv in the right spot, keep it
                if [[ "$rel" =~ ^[^/]+/[^/]+/${SEASON}/[^/]+/runs\.csv$ ]]; then
                  continue
                fi

                # 3) if it's anywhere under equipment or specializations, keep it
                #    (the slash in the regex means “anything deeper” as well)
                if [[ "$rel" =~ ^[^/]+/[^/]+/${SEASON}/[^/]+/(equipment|specializations)(/|$) ]]; then
                  continue
                fi

                # everything else under data/ goes
                echo "Removing $path"
                git rm -rf --ignore-unmatch "$path"
              done

              # prune any empty dirs under data/
              find data -type d -empty -print | while read -r d; do
                echo "Rmdir empty dir $d"
                git rm -rf --ignore-unmatch "$d"
              done

              # commit & push only if something changed
              if git diff --cached --quiet; then
                echo "Nothing to clean on $branch"
              else
                git config user.name "github-actions[bot]"
                git config user.email "github-actions[bot]@users.noreply.github.com"
                git commit -m "chore: prune data to season ${SEASON} layout"
                git push --set-upstream origin "$branch"
              fi
            done

          git checkout main
          echo "Cleanup complete for season $SEASON"

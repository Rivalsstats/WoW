name: Move Existing Data to Season Layout

on:
  workflow_dispatch:
    inputs:
      season:
        description: 'Season number to assign (e.g., 14)'
        required: true
        default: '14'

jobs:
  move-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout all branches
        uses: actions/checkout@v4
        with:
          fetch-depth: 0             # fetch all history so we can check out every branch
          fetch-tags: true
          persist-credentials: true

      - name: Move data directories in each branch
        env:
          SEASON: ${{ github.event.inputs.season }}
        run: |
          set -euo pipefail

          echo "Processing all branches (except main/HEAD) to season ${SEASON} layout..."

          git for-each-ref --format='%(refname:short)' refs/remotes/origin/* \
            | grep -v '^origin/HEAD$' \
            | sed 's@^origin/@@' \
            | grep -v '^main$' \
            | while read -r branch_name; do

              echo "-- Checking out branch: ${branch_name}"
              git checkout "${branch_name}"

              for old_dir in data/*/*/*; do
                [ -d "${old_dir}" ] || continue

                # ‚Üê Skip anything under data/runs
                if [[ "${old_dir}" == data/runs* ]]; then
                  echo "  Skipping runs folder: ${old_dir}"
                  continue
                fi

                region=$(basename "$(dirname "$(dirname "${old_dir}")")")
                realm=$(basename "$(dirname "${old_dir}")")
                period=$(basename "${old_dir}")

                new_parent="data/${region}/${realm}/${SEASON}"
                new_dir="${new_parent}/${period}"

                mkdir -p "${new_parent}"
                if git mv "${old_dir}" "${new_dir}"; then
                  echo "  Moved ${old_dir} ‚Üí ${new_dir}"
                else
                  echo "  No files to move in ${old_dir}"
                fi
              done

              if ! git diff --quiet; then
                git config user.name "github-actions[bot]"
                git config user.email "github-actions[bot]@users.noreply.github.com"
                git commit -am "chore: migrate data to season ${SEASON} layout"
                git push origin "${branch_name}"
              else
                echo "  No data changes on ${branch_name}"
              fi

            done

          git checkout main

      - name: Summary
        run: |
          echo "üéâ Migration to season ${SEASON} complete on all branches."
